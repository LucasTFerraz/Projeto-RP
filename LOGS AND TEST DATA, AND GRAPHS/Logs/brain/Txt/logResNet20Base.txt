E:\Users\lucas\AppData\Local\Programs\Python\Python313\python.exe E:\Projects\Python\RP\Hybrid-Coding-SNN-main\CIFAR10\ANN_baseline\cifar10_resNet20_base_model.py 
E:\Projects\Python\RP\Hybrid-Coding-SNN-main
['no', 'yes']
 {'no': 0, 'yes': 1}
202
51
2048
GPU is available
ResNet20(
  (conv1): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (conv2): Sequential(
    (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (conv3): Sequential(
    (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (layer4): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential()
  )
  (layer5): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential()
  )
  (layer6): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential(
      (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (layer7): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential()
  )
  (layer8): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential(
      (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (layer9): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential()
  )
  (layer10): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential(
      (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (layer11): BasicBlock(
    (conv1): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (conv2): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (shortcut): Sequential()
  )
  (pool12): AvgPool2d(kernel_size=2, stride=2, padding=0)
  (fc13): Sequential(
    (0): Linear(in_features=2048, out_features=16384, bias=True)
    (1): ReLU(inplace=True)
  )
  (linear): Linear(in_features=16384, out_features=2, bias=False)
)
Epoch 1 takes 0m 3s
Train Accuracy: 0.608911, Loss: 0.678248
Test Accuracy: 0.588235
Saving the model.
Epoch 2 takes 0m 1s
Train Accuracy: 0.618812, Loss: 0.653308
Test Accuracy: 0.588235
Epoch 3 takes 0m 1s
Train Accuracy: 0.618812, Loss: 0.643120
Test Accuracy: 0.588235
Epoch 4 takes 0m 1s
Train Accuracy: 0.618812, Loss: 0.603289
Test Accuracy: 0.745098
Saving the model.
Epoch 5 takes 0m 1s
Train Accuracy: 0.762376, Loss: 0.540064
Test Accuracy: 0.607843
Epoch 6 takes 0m 1s
Train Accuracy: 0.742574, Loss: 0.491974
Test Accuracy: 0.862745
Saving the model.
Epoch 7 takes 0m 2s
Train Accuracy: 0.861386, Loss: 0.392616
Test Accuracy: 0.647059
Epoch 8 takes 0m 1s
Train Accuracy: 0.806931, Loss: 0.387496
Test Accuracy: 0.627451
Epoch 9 takes 0m 2s
Train Accuracy: 0.826733, Loss: 0.407674
Test Accuracy: 0.588235
Epoch 10 takes 0m 1s
Train Accuracy: 0.688119, Loss: 0.627275
Test Accuracy: 0.588235
Epoch 11 takes 0m 1s
Train Accuracy: 0.797030, Loss: 0.455838
Test Accuracy: 0.745098
Epoch 12 takes 0m 1s
Train Accuracy: 0.915842, Loss: 0.225595
Test Accuracy: 0.705882
Epoch 13 takes 0m 1s
Train Accuracy: 0.970297, Loss: 0.099659
Test Accuracy: 0.784314
Epoch 14 takes 0m 1s
Train Accuracy: 0.990099, Loss: 0.029760
Test Accuracy: 0.725490
Epoch 15 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.019390
Test Accuracy: 0.666667
Epoch 16 takes 0m 1s
Train Accuracy: 0.990099, Loss: 0.024527
Test Accuracy: 0.843137
Epoch 17 takes 0m 1s
Train Accuracy: 0.990099, Loss: 0.023413
Test Accuracy: 0.745098
Epoch 18 takes 0m 1s
Train Accuracy: 0.985149, Loss: 0.037594
Test Accuracy: 0.862745
Epoch 19 takes 0m 1s
Train Accuracy: 0.950495, Loss: 0.104726
Test Accuracy: 0.823529
Epoch 20 takes 0m 1s
Train Accuracy: 0.896040, Loss: 0.515323
Test Accuracy: 0.686275
Epoch 21 takes 0m 1s
Train Accuracy: 0.851485, Loss: 0.647215
Test Accuracy: 0.588235
Epoch 22 takes 0m 1s
Train Accuracy: 0.831683, Loss: 0.410569
Test Accuracy: 0.588235
Epoch 23 takes 0m 1s
Train Accuracy: 0.861386, Loss: 0.337589
Test Accuracy: 0.686275
Epoch 24 takes 0m 1s
Train Accuracy: 0.960396, Loss: 0.145256
Test Accuracy: 0.803922
Epoch 25 takes 0m 1s
Train Accuracy: 0.980198, Loss: 0.044210
Test Accuracy: 0.803922
Epoch 26 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.006637
Test Accuracy: 0.803922
Epoch 27 takes 0m 1s
Train Accuracy: 0.985149, Loss: 0.032172
Test Accuracy: 0.803922
Epoch 28 takes 0m 1s
Train Accuracy: 0.970297, Loss: 0.086034
Test Accuracy: 0.745098
Epoch 29 takes 0m 1s
Train Accuracy: 0.985149, Loss: 0.062794
Test Accuracy: 0.764706
Epoch 30 takes 0m 1s
Train Accuracy: 0.975248, Loss: 0.103473
Test Accuracy: 0.784314
Epoch 31 takes 0m 1s
Train Accuracy: 0.960396, Loss: 0.166312
Test Accuracy: 0.745098
Epoch 32 takes 0m 1s
Train Accuracy: 0.965347, Loss: 0.115529
Test Accuracy: 0.725490
Epoch 33 takes 0m 1s
Train Accuracy: 0.990099, Loss: 0.027829
Test Accuracy: 0.705882
Epoch 34 takes 0m 1s
Train Accuracy: 0.985149, Loss: 0.043878
Test Accuracy: 0.764706
Epoch 35 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.038677
Test Accuracy: 0.803922
Epoch 36 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.010358
Test Accuracy: 0.803922
Epoch 37 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.006744
Test Accuracy: 0.803922
Epoch 38 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.011998
Test Accuracy: 0.803922
Epoch 39 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.003656
Test Accuracy: 0.823529
Epoch 40 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.005294
Test Accuracy: 0.803922
Epoch 41 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000897
Test Accuracy: 0.803922
Epoch 42 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.007533
Test Accuracy: 0.784314
Epoch 43 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000280
Test Accuracy: 0.784314
Epoch 44 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000572
Test Accuracy: 0.764706
Epoch 45 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001017
Test Accuracy: 0.745098
Epoch 46 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.003634
Test Accuracy: 0.784314
Epoch 47 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001913
Test Accuracy: 0.803922
Epoch 48 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000192
Test Accuracy: 0.823529
Epoch 49 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000177
Test Accuracy: 0.823529
Epoch 50 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000195
Test Accuracy: 0.823529
Epoch 51 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000207
Test Accuracy: 0.823529
Epoch 52 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.025933
Test Accuracy: 0.823529
Epoch 53 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000282
Test Accuracy: 0.764706
Epoch 54 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.015729
Test Accuracy: 0.764706
Epoch 55 takes 0m 1s
Train Accuracy: 0.985149, Loss: 0.108350
Test Accuracy: 0.764706
Epoch 56 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.019228
Test Accuracy: 0.725490
Epoch 57 takes 0m 1s
Train Accuracy: 0.975248, Loss: 0.070963
Test Accuracy: 0.764706
Epoch 58 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.003667
Test Accuracy: 0.784314
Epoch 59 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.006036
Test Accuracy: 0.823529
Epoch 60 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000741
Test Accuracy: 0.803922
Epoch 61 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.002377
Test Accuracy: 0.823529
Epoch 62 takes 0m 1s
Train Accuracy: 0.990099, Loss: 0.052061
Test Accuracy: 0.843137
Epoch 63 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.006820
Test Accuracy: 0.862745
Epoch 64 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.004642
Test Accuracy: 0.882353
Saving the model.
Epoch 65 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.008598
Test Accuracy: 0.901961
Saving the model.
Epoch 66 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001716
Test Accuracy: 0.862745
Epoch 67 takes 0m 1s
Train Accuracy: 0.990099, Loss: 0.016750
Test Accuracy: 0.843137
Epoch 68 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001779
Test Accuracy: 0.823529
Epoch 69 takes 0m 1s
Train Accuracy: 0.985149, Loss: 0.094940
Test Accuracy: 0.843137
Epoch 70 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.004944
Test Accuracy: 0.823529
Epoch 71 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.005851
Test Accuracy: 0.803922
Epoch 72 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000852
Test Accuracy: 0.803922
Epoch 73 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.013876
Test Accuracy: 0.803922
Epoch 74 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.031864
Test Accuracy: 0.803922
Epoch 75 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000685
Test Accuracy: 0.823529
Epoch 76 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001921
Test Accuracy: 0.823529
Epoch 77 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000552
Test Accuracy: 0.843137
Epoch 78 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000901
Test Accuracy: 0.862745
Epoch 79 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.059901
Test Accuracy: 0.843137
Epoch 80 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000611
Test Accuracy: 0.843137
Epoch 81 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000694
Test Accuracy: 0.843137
Epoch 82 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.032848
Test Accuracy: 0.843137
Epoch 83 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000640
Test Accuracy: 0.843137
Epoch 84 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001147
Test Accuracy: 0.843137
Epoch 85 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000887
Test Accuracy: 0.823529
Epoch 86 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000626
Test Accuracy: 0.823529
Epoch 87 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.000473
Test Accuracy: 0.823529
Epoch 88 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001493
Test Accuracy: 0.823529
Epoch 89 takes 0m 1s
Train Accuracy: 1.000000, Loss: 0.001346
Test Accuracy: 0.823529
Epoch 90 takes 0m 1s
Train Accuracy: 0.995050, Loss: 0.014578
Test Accuracy: 0.823529
Best Test Accuracy: 0.901961
end

Process finished with exit code 0
